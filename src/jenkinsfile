pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out the source code...'
                checkout scm
            }
        }
        stage('Build') {
            steps {
                echo 'Building the application...'
                script {
                    try {
                        if (isUnix()) {
                            sh 'chmod +x ./build_script.sh && ./build_script.sh'
                        } else {
                            bat 'build_script.bat'
                        }
                    } catch (Exception e) {
                        echo 'Build failed'
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }
        stage('Start Services') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Starting services...'
                script {
                    if (isUnix()) {
                        sh 'nohup ./start_services.sh &'
                    } else {
                        bat 'start_services.bat'
                    }
                }
            }
        }
        stage('Run Tests') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Running tests...'
                script {
                    if (isUnix()) {
                        sh './run_tests.sh'
                    } else {
                        bat 'run_tests.bat'
                    }
                }
            }
        }
        stage('Deploy') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Deploying the application...'
                script {
                    if (isUnix()) {
                        sh './deploy.sh'
                    } else {
                        bat 'deploy.bat'
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Stopping services...'
            script {
                try {
                    if (isUnix()) {
                        sh './stop_services.sh'
                    } else {
                        bat 'stop_services.bat'
                    }
                } catch (Exception e) {
                    echo 'Error stopping services: ' + e.getMessage()
                }
            }
            echo 'Pipeline finished'
        }
    }
}
